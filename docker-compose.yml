services:

  ## Banco de Dados PostGreeSQL
  postgres:
    image: postgres:latest
    container_name: ms-database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: infuse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - my_network

  ## Microsserviço
  backend-creditos:
    image: backend-creditos-app
    build:
      context: . # referência ao Dockerfile da aplicação backend-creditos
    container_name: creditos-app
    ports:
      - "8080:8080"
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/infuse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - my_network
    depends_on:
      - postgres

  ## Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - my_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - my_network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - my_network
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks:
  my_network:
    external: true